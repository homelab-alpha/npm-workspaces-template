# STAGE 1: Base & Dependencies
# A base image with all dependencies installed.
FROM node:22.21.0-slim AS base

# Set the working directory.
WORKDIR /app

# Copy the package.json files from the root and the workspaces.
# Doing this in separate layers makes optimal use of the Docker cache.
# If only the source code changes, 'npm ci' does not need to run again.
COPY package.json package-lock.json* ./
COPY client/package.json ./client/
COPY server/package.json ./server/

# Install all dependencies for all workspaces.
# "npm ci" is faster and more reliable for builds.
RUN npm ci

# Copy the entire source code of the project.
COPY . .

# STAGE 2: Build
# This stage builds the client application (Vue.js).
FROM base AS builder

# Run the build script for the 'client' workspace.
RUN npm run build --workspace=client

# STAGE 3: Production
# This stage creates a lean image for production.
FROM node:22.21.0-slim AS production

# Set the working directory.
WORKDIR /app

# Copy package.json files from the 'base' stage.
COPY --from=base /app/package.json ./
COPY --from=base /app/package-lock.json* ./
COPY --from=base /app/client/package.json ./client/
COPY --from=base /app/server/package.json ./server/

# Install only the production dependencies to minimize the image size.
RUN npm ci --omit=dev

# Copy the built client files from the 'builder' stage.
COPY --from=builder /app/client/dist ./client/dist

# Copy the server files from the 'builder' stage.
COPY --from=builder /app/server ./server

# Set the PORT environment variable.
ENV PORT=3210
EXPOSE 3210

# The command to start the server.
CMD [ "npm", "run", "start", "--workspace=server" ]

# STAGE 4: Test
# This stage is specifically for running tests in an isolated environment.
FROM base AS test

# Define the command to run tests for the 'server' workspace.
CMD [ "npm", "run", "test", "--workspace=server" ]

# STAGE 5: Development
# This stage is for local development with both client and server running.
FROM base AS development

# Define the command to start the development server for all workspaces.
# The 'dev' script in the root package.json uses 'npm-run-all2' to
# start both client and server simultaneously.
CMD [ "npm", "run", "dev" ]
